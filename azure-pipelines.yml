trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_ROOT: '$(Agent.TempDirectory)/myapp'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - checkout: self

    - task: NodeTool@0
      inputs:
        versionSpec: '18.10.x'

    - script: npm install -g @angular/cli
      displayName: 'Install Angular CLI'

    - script: |
        cd CoachAndFocus.Web.UI/ClientApp
        npm install
      displayName: 'Install npm dependencies'

    - script: |
        cd CoachAndFocus.Web.UI/ClientApp
        ng test --watch=false --browsers=ChromeHeadless
      displayName: 'Run Angular tests'

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.0.x'
        includePreviewVersions: true

    - script: dotnet build --configuration Release
      displayName: 'Build with dotnet'

    - script: dotnet publish -c Release -o $(DOTNET_ROOT)/myapp
      displayName: 'dotnet publish'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(DOTNET_ROOT)/myapp'
        ArtifactName: '.net-app'
        publishLocation: 'Container'

- stage: Deploy
  jobs:
  - deployment: DeployJob
    environment: 'Production'
    dependsOn: BuildJob
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: '.net-app'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: '<Azure-Service-Connection>' # Update this with your Azure service connection id
              appType: 'webApp'
              WebAppName: 'coachandfocus'
              deployToSlotOrASE: true
              ResourceGroupName: '<Resource-Group-Name>' # Update this with your Azure resource group name
              SlotName: 'Production'
              packageForLinux: '$(Pipeline.Workspace)/.net-app/*'
